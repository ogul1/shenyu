# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Copied from https://github.com/jens-maus/RaspberryMatic/blob/ea6b8ce0dd2d53ea88b2766ba8d7f8e1d667281f/.github/workflows/ci.yml#L34-L40
# and https://github.com/actions/virtual-environments/issues/709#issuecomment-612569242

name: Modified it
jobs:
  build:
    strategy:
      matrix:
        case:
        - shenyu-integrated-test-apache-dubbo
        - shenyu-integrated-test-grpc
        - shenyu-integrated-test-http
        - shenyu-integrated-test-https
        - shenyu-integrated-test-motan
        - shenyu-integrated-test-spring-cloud
        - shenyu-integrated-test-sofa
        - shenyu-integrated-test-websocket
        - shenyu-integrated-test-rewrite
        - shenyu-integrated-test-combination
        - shenyu-integrated-test-sdk-apache-dubbo
        - shenyu-integrated-test-sdk-http
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-build (${{ matrix.case }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/shenyu/shenyu', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@v3
      with:
        submodules: true
    - run: touch optcd-3.txt
    - name: Free disk space
      run: |-
        df --human-readable
        sudo apt clean
        docker rmi $(docker image ls --all --quiet)
        rm --recursive --force "$AGENT_TOOLSDIRECTORY"
        df --human-readable
    - run: touch optcd-4.txt
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: .github/filters.yml
        list-files: json
    - run: touch optcd-5.txt
    - name: Restore ShenYu Maven Repos
      uses: actions/cache/restore@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |-
          ${{ runner.os }}-maven-
    - run: touch optcd-6.txt
    - uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin
    - run: touch optcd-7.txt
    - name: Build with Maven
      run: ./mvnw -B clean install -Prelease,docker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true
    - run: touch optcd-8.txt
    - name: Build examples
      run: ./mvnw -B clean install -Pexample -Dmaven.javadoc.skip=true -Dmaven.test.skip=true
        -am -f ./shenyu-examples/pom.xml
    - run: touch optcd-9.txt
    - name: Build integrated tests
      run: ./mvnw -B clean install -Pit -DskipTests -f ./shenyu-integrated-test/pom.xml
    - run: touch optcd-10.txt
    - name: Start docker compose
      run: docker compose -f ./shenyu-integrated-test/${{ matrix.case }}/docker-compose.yml
        up -d
    - run: touch optcd-11.txt
    - name: Wait for docker compose start up completely
      run: bash ./shenyu-integrated-test/${{ matrix.case }}/script/healthcheck.sh
    - run: touch optcd-12.txt
    - name: Disk space info
      run: |-
        df --human-readable
    - run: touch optcd-13.txt
    - name: Run test
      id: test
      run: ./mvnw test -Pit -f ./shenyu-integrated-test/${{ matrix.case }}/pom.xml
      continue-on-error: true
    - run: touch optcd-14.txt
    - name: Check test result
      run: |-
        docker compose -f ./shenyu-integrated-test/${{ matrix.case }}/docker-compose.yml logs --tail="all"
        if [[ ${{steps.test.outcome}} == "failure" ]]; then
          echo "Test Failed"
          exit 1
        else
          echo "Test Successful"
          exit 0
        fi
    - run: touch optcd-15.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-build (${{ matrix.case }})
        path: /home/runner/inotifywait-log-build (${{ matrix.case }}).csv
    name: build (${{ matrix.case }})
'on':
- push
- workflow_dispatch
